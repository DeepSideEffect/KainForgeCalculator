:root {
	--default-font-size: 16px;
	--mobile-phone-font-size: calc(var(--default-font-size) - 6px);
	--small-corner-radius: 15px;
	--about-link-bottom: 1.2rem;
	--about-link-bottom-mobile: 0.8rem;

	--primary-color: #540d11;
	--secondary-color: #b96167;
	--secondary-light-color: #ebbfbf;
	--succes-message-color: #21b530;
	--highlight-color: #68c5bf;
	--secondary-highlight-color: aliceblue;

	--ease-function: ease-in-out;
	--transition-duration: 1.8s;
	--small-transition-duration: calc(var(--transition-duration) - 0.45s);
	--standart-transition: all var(--transition-duration) var(--ease-function);
	--short-transition: all var(--small-transition-duration) var(--ease-function);

	--current-color: var(--secondary-color);

	--cube-max-width: 32rem; /* always a value divisible by 4 */
	--half-cube-max-width: calc(var(--cube-max-width) / 2);
	--cube-perspective: 4000px;
	--cube-translateZ-val: var(--half-cube-max-width);
	--no-perspective: 100000px;
}

.left {
	text-align: left;
}

.center {
	text-align: center;
}

.right {
	text-align: right;
}

.d-flex-justify {
	display: flex;
	justify-content: space-between;
}

h1,
h3,
#version,
#data-sources {
	text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

.form-group {
	margin: 2rem 0 2.5rem;
}

.form-row {
	display: inline-block;
	margin-right: 20px;
	margin-bottom: 20px;
}

.form-row label,
label[for="type"] {
	font-family: cursive;
	color: var(--primary-color);
}

.form-row label {
	font-size: 98%;
	text-shadow: 2px 2px 4px rgba(0,0,0,0.4);
}

label[for="type"] {
	font-weight: bold;
	text-shadow: 2px 2px 8px rgba(0,0,0,0.5);
}

h1,
h3 {
	color: var(--primary-color);
	transition: var(--transition-duration);
}

span.dancing-label {
	transition: var(--standart-transition);
}

#data-sources {
	transition: var(--standart-transition);
	position: fixed;
	bottom: 2rem;
	left: 2rem;
}

#data-sources a {
	transition: var(--standart-transition);
	text-decoration: none;
	color: var(--secondary-light-color);
}

#data-sources a:hover {
	text-decoration: underline;
	color: var(--highlight-color) !important;
}

#data-sources a:visited {
	color: var(--secondary-color);
}

#version {
	transition: var(--standart-transition);
	position: fixed;
	bottom: 2rem;
	right: 2rem;
}

#version a {
	transition: var(--standart-transition);
	text-decoration: none;
	color: var(--secondary-color);
	font-style: italic;
	font-size: smaller;
}

#version a:not(.about):hover {
	text-decoration: underline;
	color: var(--highlight-color) !important;
}

#version a.about {
	position: absolute;
	bottom: var(--about-link-bottom);
	right: 0;
	text-align: center;
	font-weight: bold;
	font-style: normal;
	border-radius: 50%;
	text-shadow: 1px 1px 2px;
}

#version a.about:hover,
#version a.about:active,
#version a.about:focus {
	padding: 1px 5px;
	right: -5px;
	bottom: calc(var(--about-link-bottom) - 1px);
	background-color: rgba(255, 255, 255, 0.75);
	box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);
}

button {
	transition:
		var(--standart-transition),
		background-position-y var(--small-transition-duration) ease;
	cursor: pointer;
	border-width: thin;
	border-radius: 25px;
	border-style: outset;
	font-weight: bold;
	font-family: cursive;
	background-position-y: 200px;
}

button:not(:disabled) {
	background-color: var(--current-color);
	color: var(--secondary-highlight-color);
	background-image: linear-gradient(var(--current-color), rgba(255, 255, 255, 0));
	background-position-y: 0;
	box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
}

button:not(:disabled):hover,
button:not(:disabled):focus,
button:not(:disabled):active {
	background-color: var(--primary-color);
	box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.75);
}

button#calculer {
	padding: 5px 50px;
}

button.mini-bouton {
	margin-left: 3rem;
}

.button-container {
	display: flex;
	justify-content: center;
	margin: 2.5rem 0;
}

audio {
	display: none;
}

span.numberResult {
	font-weight: bold;
}

span.cout-total {
	font-style: italic;
	text-decoration: underline;
	padding-left: 10px;
}

div.result {
	width: 40vw;
	display: inline-block;
	background-color: var(--secondary-highlight-color);
	padding-bottom: 10px;
}

div.result:first-child,
div.result:nth-child(2) {
	box-shadow: 10px 10px 10px 0px rgba(0, 0, 0, 0.5);
}

.radius-top {
	border-top-left-radius: var(--small-corner-radius);
	border-top-right-radius: var(--small-corner-radius);
}

.radius-bottom {
	border-bottom-left-radius: var(--small-corner-radius);
	border-bottom-right-radius: var(--small-corner-radius);
}

#resultatV1 {
	margin-bottom: 2rem;
}

#resultat {
	transition: var(--short-transition);
	max-height: 40vh;
	opacity: 1;
}

#resultat.init {
	opacity: 0;
}

#recapModification {
	padding-top: 10px;
}

#recapModification p {
	transition: var(--standart-transition);
	margin: auto;
	font-size: 1.6rem;
	font-weight: bold;
	color: var(--current-color);
	transform: rotateZ(90deg);
	width: fit-content;
	padding: 10px 0;
	text-shadow: 4px -4px 5px;
}

#recapModification.init p {
	transform: rotateZ(0deg);
}

span.nom-objet-bw {
	font-family: Verdana, Helvetica, sans-serif;
	font-weight: bold;
	text-wrap-mode: nowrap;
	padding: 0.25rem;
	font-size: var(--mobile-phone-font-size);
	color: #DABA4C;
	background-color: black;
	border-radius: 0.45rem;
	box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.4);
	/* cursor: pointer; TODO: en attente transcodage complet avec la page https://r1.fr.bloodwars.net/test_items.php?xxx pour créer un lien hypertext à minima */
}

span.lang-btn {
	opacity: 0.4;
	cursor: pointer;
	transition: var(--short-transition);
}

span.lang-btn:hover,
span.lang-btn:focus,
span.lang-btn:active {
	opacity: 1;
	box-shadow: 5px 19px 5px rgba(0, 0, 0, 0.4)
}

span.lang-btn:not(:last-child) {
	margin-right: 5px;
}

span.lang-btn img {
	vertical-align: middle;
}

body {
	background:
		linear-gradient(to right, var(--primary-color), #ffffff) 0 0 / 16.67% 100% repeat-y,
		linear-gradient(to right, #ffffff, var(--primary-color)) 100% 0 / 16.67% 100% repeat-y,
		#ffffff;
	height: calc(100vh - 2rem);
	width: 100%;
	margin: 0 auto;
	font-size: var(--default-font-size);
}

#layout {
	max-width: 66%;
	padding-bottom: 30px;
	margin-right: auto;
	margin-left: auto;
	transition: var(--short-transition);
	transform: scaleX(1);
	background-color: transparent;
	color: black;
}

#sound-tool-bar {
	transition: var(--standart-transition);
	position: fixed;
	top: 2rem;
	right: 2rem;
	max-width: 16.67%;
}

#lang-tool-bar {
	transition: var(--standart-transition);
	position: fixed;
	top: 2rem;
	left: 2rem;
	max-width: 14%;
}

input[type="range"] {
	transition: var(--short-transition);
	accent-color: var(--primary-color);
	opacity: 0.4;
	width: 100%;
	cursor: pointer;
}

input[type="range"]:hover {
	opacity: 1;
}

select {
	background-color: var(--primary-color);
	color: white;
	padding: 0.5em 1em;
	border: none;
	border-radius: 0.25em;
	box-shadow: 0 0.25em 0.5em rgba(0, 0, 0, 0.1);
	font-size: 1em;
	cursor: pointer;
	transition: var(--transition-duration);
}

select:hover {
	filter: sepia(100%);
}

select option {
	background-color: white;
	color: var(--primary-color);
}

.icon {
	padding: 0.2em 0.4em;
}

button:has(.icon) {
	margin-left: 0.5rem;
}

button:not(:disabled) .icon {
	color: white;
}

button:disabled {
	cursor: not-allowed;
}

#scroll-bottom-btn {
	margin-top: 0.5rem;
}

#poster {
	background-image: url('../assets/images/logos/KainForgeCalculator_Logo.png');
	background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
	transition: var(--short-transition);
	height: var(--cube-max-width);
}

/* TODO: to delete !
#poster.hidden {
	height: 0;
	transform: scaleY(0);
}*/

/* --- Styles spécifiques aux téléphones --- */
@media (max-width: 600px) {
	body {
		font-size: var(--mobile-phone-font-size);
	}

	span.nom-objet-bw {
		font-size: calc(var(--mobile-phone-font-size) - 4px);
	}

	#data-sources,
	#lang-tool-bar {
		left: 1rem;
	}

	#version {
		right: 1rem;
	}

	#data-sources,
	#version {
		bottom: 1rem;
	}

	#sound-tool-bar {
		transform: rotate(-90deg);
		right: 0;
		min-width: 69px;
	}

	#lang-tool-bar {
		top: 1rem;
		max-width: 33px;
	}

	span.dancing-label {
		transform: rotate(90deg);
	}

	span.lang-btn:not(:last-child) {
		margin-right: 0;
	}

	#version a.about {
		bottom: var(--about-link-bottom-mobile);
	}

	#version a.about:hover,
	#version a.about:active,
	#version a.about:focus {
		bottom: calc(var(--about-link-bottom-mobile) - 1px);
	}
}

/* --- Notifications --- */

#notification-container {
	transition: var(--short-transition);
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	width: 100vw;
	position: fixed;
	top: 0;
	left: 0;
	background-color: transparent;
	pointer-events: none;
}

#notification-container.show {
	background-color: rgba(0, 0, 0, 0.8);
}

#notification {
	color: var(--succes-message-color);
	transition: var(--standart-transition);
	opacity: 0;
	border: 5px solid var(--secondary-light-color);
	border-radius: 1rem;
	background-color: var(--secondary-highlight-color);
	font-size: x-large;
	padding: 10px;
}

#notification.show {
	opacity: 1;
}

/* --- Intro --- */

#notification-container.intro {
	background-color: var(--primary-color);
}

#layout.intro {
	transform: scaleX(0);
}

#layout.intro,
#version.intro,
#data-sources.intro,
#data-sources.intro a {
	color: var(--primary-color);
}

h1.intro,
h3.intro,
#version.intro,
#data-sources.intro {
	text-shadow: none;
}

#version.intro {
	right: 0;
	bottom: 0;
}

#data-sources.intro {
	left: 0;
	bottom: 0;
}

#sound-tool-bar.intro {
	top: 0;
	right: 0;
}

#lang-tool-bar.intro {
	top: 0;
	left: 0;
}

/* --- bouton on-off (checkbox) --- */

.switch {
	position: relative;
	display: inline-block;
	width: 3em;
	height: 1.7em;
	vertical-align: middle;
	transform: scale(0.8);
}

.switch input {
	opacity: 0;
	width: 0;
	height: 0;
}

.slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: #ccc;
	transition: .4s;
	border-radius: 1.7em;
	opacity: 0.4;
}

.slider:before {
	position: absolute;
	content: "";
	height: 1.3em;
	width: 1.3em;
	left: 0.2em;
	bottom: 0.2em;
	background-color: white;
	transition: .4s;
	border-radius: 50%;
}

.slider:hover {
	opacity: 1;
}

input:checked+.slider {
	background-color: var(--primary-color);
}

input:checked+.slider:before {
	transform: translateX(1.3em);
}

div.mute-unmute {
	align-items: center;
}

/* Cube styles */

.cube-output {
	box-sizing: border-box;
	width: fit-content;
	margin-top: 2rem; /* calc(40vh - var(--cube-width)); TODO: to check or delete! --> Ici, il faut régler en petit écran quand le texte déborde */
	margin-left: auto;
	margin-right: auto;
}

#cube-container {
	perspective: var(--cube-perspective);
	aspect-ratio: 1 / 1;
  width: var(--cube-max-width);
	height: 100%;
	text-align: center;
	align-items: center;
	display: flex;
	justify-content: center;
	transition: var(--short-transition);
}

#cube-element {
	width: 100%;
	height: 100%;
	transform-style: preserve-3d;
	transition: var(--short-transition);
}

.face {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 100%;
	position: absolute;
	backface-visibility: inherit;
	transition: var(--short-transition);
}

.front {
	background: rgba(90,90,90,.7); /* TODO: to delete */
	transform: translateZ(var(--cube-translateZ-val));
}

.bottom {
	transform: rotateX(-90deg) translateZ(var(--cube-translateZ-val));
}

#cube-element:has(#poster.hidden) {
	rotate: none;
}

#cube-element:has(#resultat.init) {
	transform: rotateX(90deg);
}

#cube-container.no-perspective {
	perspective: none;
	animation: remove-perspective-animation 1s ease;
}

#cube-container:not(.no-perspective) {
	perspective: var(--cube-perspective);
	animation: apply-perspective-animation 0.25s ease;
}

/* --- Styles spécifiques au cube sur plus petit écran --- */
@media (max-width: 800px) {
	:root {
		--cube-max-width: 16rem;
		--cube-perspective: 2000px;
		--half-cube-max-width: calc(var(--cube-max-width) / 2);
		--cube-translateZ-val: var(--half-cube-max-width);
		--no-perspective: 50000px;
	}

	.cube-output {
		margin-top: 3rem;
	}
}

@keyframes apply-perspective-animation {
	0% {
		perspective: none;
	}

	5% {
		perspective: var(--no-perspective);
	}

	20% {
		perspective: calc(var(--no-perspective) * 0.9);
	}

	40% {
		perspective: calc(var(--no-perspective) * 0.75);
	}

	60% {
		perspective: calc(var(--no-perspective) * 0.5);
	}

	80% {
		perspective: calc(var(--no-perspective) * 0.25);
	}

	90% {
		perspective: calc(var(--no-perspective) * 0.1);
	}

	100% {
		perspective: var(--cube-perspective);
	}
}

@keyframes remove-perspective-animation {
	0% {
		perspective: var(--cube-perspective);
	}

	20% {
		perspective: calc(var(--cube-perspective) * 5);
	}

	40% {
		perspective: calc(var(--cube-perspective) * 10);
	}

	60% {
		perspective: calc(var(--cube-perspective) * 15);
	}

	80% {
		perspective: calc(var(--cube-perspective) * 20);
	}

	90% {
		perspective: calc(var(--cube-perspective) * 25);
	}

	100% {
		perspective: var(--no-perspective);
	}
}
